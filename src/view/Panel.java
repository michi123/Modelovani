/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Color;
import modelovani.Day;
import modelovani.Logic;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Ja
 */
public class Panel extends javax.swing.JFrame {
    /**
     * Creates new form Panel
     */
    public Panel() {
        initComponents();
        minSlider.setValue(20);
        maxSlider.setValue(50);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pocet_lidi = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        labelPocetLidi = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        minSlider = new javax.swing.JSlider();
        min = new javax.swing.JLabel();
        max = new javax.swing.JLabel();
        graphPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pocet_lidi.setMaximum(20);
        pocet_lidi.setToolTipText("");
        pocet_lidi.setValue(10);
        pocet_lidi.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pocet_lidiMouseDragged(evt);
            }
        });
        pocet_lidi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pocet_lidiMouseReleased(evt);
            }
        });

        jLabel1.setText("Počet lidí:");

        startButton.setText("Spustit");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        labelPocetLidi.setText("1.0 X");

        jLabel2.setText("Násobek:");

        jLabel3.setText("Max:");

        maxSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                maxSliderMouseDragged(evt);
            }
        });
        maxSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                maxSliderMouseReleased(evt);
            }
        });

        jLabel4.setText("Min");

        minSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                minSliderMouseDragged(evt);
            }
        });
        minSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                minSliderMouseReleased(evt);
            }
        });

        min.setText("20");

        max.setText("50");

        graphPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pocet_lidi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(labelPocetLidi))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(minSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(min)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(max)
                .addGap(151, 151, 151))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel2)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelPocetLidi)
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(maxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(minSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(min)
                            .addComponent(max)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(pocet_lidi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
       if(maxSlider.getValue()>minSlider.getValue()){
           Logic logic = new Logic(pocet_lidi.getValue()/10.0, this);
       }else{
           Error err= new Error("Max je menší než min");
           err.setVisible(true);
       }
    }//GEN-LAST:event_startButtonActionPerformed

    private void pocet_lidiMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pocet_lidiMouseDragged
        Double number = new Double(pocet_lidi.getValue()/10.0);
        labelPocetLidi.setText(number.toString()+" X");
    }//GEN-LAST:event_pocet_lidiMouseDragged

    private void pocet_lidiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pocet_lidiMouseReleased
       Double number = new Double(pocet_lidi.getValue()/10.0);
        labelPocetLidi.setText(number.toString()+" X");
    }//GEN-LAST:event_pocet_lidiMouseReleased

    private void minSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minSliderMouseDragged
        Logic.min=minSlider.getValue();
        min.setText(Integer.toString(minSlider.getValue()));
    }//GEN-LAST:event_minSliderMouseDragged

    private void minSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minSliderMouseReleased
         Logic.min=minSlider.getValue();
         min.setText(Integer.toString(minSlider.getValue()));
    }//GEN-LAST:event_minSliderMouseReleased

    private void maxSliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxSliderMouseDragged
         Logic.max=minSlider.getValue();
         max.setText(Integer.toString(maxSlider.getValue()));
    }//GEN-LAST:event_maxSliderMouseDragged

    private void maxSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxSliderMouseReleased
         Logic.max=minSlider.getValue();
         max.setText(Integer.toString(maxSlider.getValue()));
    }//GEN-LAST:event_maxSliderMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Panel().setVisible(true);
            }
        });
    }
    
    
     public void graph(Day [] days) {
         int actors=0;
         int accidents=0;
        
         
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for (int i = 0; i <= 31; i++) { 
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Leden");
        dataset.setValue(accidents, "Počet nehod","Leden");
        actors=0;
        accidents=0;
        for (int i = 31; i < 60; i++) { 
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Únor");
        dataset.setValue(accidents, "Počet nehod","Únor");
        actors=0;
        accidents=0;
        for (int i = 60; i < 91; i++) {    
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Březen");
        dataset.setValue(accidents, "Počet nehod","Březen");
        actors=0;
        accidents=0;
        for (int i = 91; i < 121; i++) {    
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Duben");
        dataset.setValue(accidents, "Počet nehod","Duben");
        actors=0;
        accidents=0;
        for (int i = 121; i < 152; i++) { 
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Květen");
        dataset.setValue(accidents, "Počet nehod","Květen");
        actors=0;
        accidents=0;
        for (int i = 152; i < 182; i++) { 
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Červen");
        dataset.setValue(accidents, "Počet nehod","Červen");
        actors=0;
        accidents=0;
        for (int i = 182; i < 213; i++) {    
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Červenec");
        dataset.setValue(accidents, "Počet nehod","Červenec");
        actors=0;
        accidents=0;
        for (int i = 213; i < 244; i++) {   
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Srpen");
        dataset.setValue(accidents, "Počet nehod","Srpen");
        actors=0;
        accidents=0;
        for (int i = 244; i < 274; i++) {  
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Září");
        dataset.setValue(accidents, "Počet nehod","Září");
        actors=0;
        accidents=0;
        for (int i = 274; i < 305; i++) {  
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Říjen");
        dataset.setValue(accidents, "Počet nehod","Říjen");
        actors=0;
        accidents=0;
        for (int i = 305; i < 335; i++) {    
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Listopad");
        dataset.setValue(accidents, "Počet nehod","Listopad");
        actors=0;
        accidents=0;
        for (int i = 335; i < 365; i++) {  
            actors=actors + days[i].actors;
            accidents=accidents + days[i].accidents;
         }
        dataset.setValue(actors, "Počet lidí","Prosinec");
        dataset.setValue(accidents, "Počet nehod","Prosinec");
        actors=0;
        accidents=0;
        
        
        
 

        JFreeChart chart = ChartFactory.createBarChart("Poměr počtu lidí a nehod za daný měsíc", "Měsíc", "Počet lidí", dataset, PlotOrientation.VERTICAL, true, true, true);
         CategoryPlot p = chart.getCategoryPlot();
         p.setRangeGridlinePaint(Color.black);
        ChartPanel chartPanel = new ChartPanel(chart);
        graphPanel.removeAll();
        graphPanel.add(chartPanel, BorderLayout.CENTER);
        graphPanel.validate();
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelPocetLidi;
    private javax.swing.JLabel max;
    private javax.swing.JSlider maxSlider;
    private javax.swing.JLabel min;
    private javax.swing.JSlider minSlider;
    private javax.swing.JSlider pocet_lidi;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
